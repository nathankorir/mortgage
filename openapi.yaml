openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/applications:
    get:
      tags:
      - application-controller
      operationId: getApplications
      parameters:
      - name: nationalId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - APPROVED
          - REJECTED
          - CANCELLED
      - name: purpose
        in: query
        required: false
        schema:
          type: string
      - name: createdFrom
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: createdTo
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageApplicationResponse"
    post:
      tags:
      - application-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApplicationResponse"
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/JwtAuthResponse"
  /api/v1/applications/{id}/decision:
    patch:
      tags:
      - application-controller
      operationId: decide
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DecisionRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApplicationResponse"
  /api/v1/applications/{id}:
    get:
      tags:
      - application-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApplicationResponse"
components:
  schemas:
    ApplicationRequest:
      type: object
      properties:
        nationalId:
          type: integer
          format: int64
        purpose:
          type: string
        amount:
          type: number
          format: double
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentRequest"
      required:
      - amount
      - nationalId
      - purpose
    DocumentRequest:
      type: object
      properties:
        fileName:
          type: string
        type:
          type: string
        size:
          type: integer
          format: int64
        presignedUrl:
          type: string
      required:
      - fileName
      - presignedUrl
      - size
      - type
    ApplicationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nationalId:
          type: integer
          format: int64
        purpose:
          type: string
        amount:
          type: number
          format: double
        status:
          type: string
          enum:
          - PENDING
          - APPROVED
          - REJECTED
          - CANCELLED
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentResponse"
        createdAt:
          type: string
          format: date-time
    DocumentResponse:
      type: object
      properties:
        fileName:
          type: string
        type:
          type: string
        size:
          type: integer
          format: int64
        presignedUrl:
          type: string
    LoginDto:
      type: object
      properties:
        usernameOrEmail:
          type: string
        password:
          type: string
    JwtAuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
    DecisionRequestDto:
      type: object
      properties:
        decisionType:
          type: string
          enum:
          - APPROVED
          - REJECTED
        status:
          type: string
          enum:
          - PENDING
          - APPROVED
          - REJECTED
          - CANCELLED
        approverId:
          type: string
          format: uuid
        comments:
          type: string
      required:
      - approverId
      - comments
      - decisionType
      - status
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PageApplicationResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationResponse"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        pageable:
          $ref: "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
