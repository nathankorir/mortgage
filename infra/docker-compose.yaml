version: '3.8'

services:
  mortgage-service:
    build:
      context: ../backend/
      dockerfile: Dockerfile
    container_name: mortgage-service
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-Xmx512m
      - SPRING_ACTIVE_PROFILE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mortgage-postgres:5432/mortgage
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
      - KAFKA_TOPIC=loan.applications
    depends_on:
      - mortgage-postgres
      - kafka
    restart: unless-stopped
  mortgage-postgres:
    image: postgres:13
    container_name: mortgage-postgres
    restart: always
    environment:
      POSTGRES_DB: mortgage
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local